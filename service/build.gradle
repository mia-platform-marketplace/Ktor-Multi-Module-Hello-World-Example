plugins {
    id('org.jetbrains.kotlin.jvm')
}

dependencies {
    implementation project(":commons")

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-client-core-jvm:$ktor_version"
    implementation "io.ktor:ktor-jackson:$ktor_version"
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"

    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '6.0'

    implementation "com.github.papsign:Ktor-OpenAPI-Generator:0.2-beta.20"

    implementation "com.squareup.okhttp3:logging-interceptor:4.9.1"
    testImplementation group: 'com.squareup.okhttp', name: 'mockwebserver', version: '2.7.5'
    testImplementation "com.squareup.retrofit2:retrofit-mock:$retrofit_version"

    implementation "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit_version"

    testImplementation 'io.mockk:mockk:1.12.0'
    testImplementation 'com.willowtreeapps.assertk:assertk:0.24'
    testImplementation 'org.mock-server:mockserver-netty:5.11.2'
}

test {
    useJUnitPlatform()
}

jar {
    duplicatesStrategy(DuplicatesStrategy.INCLUDE)

    manifest {
        attributes(
            'Class-Path': configurations.runtimeClasspath.collect { it.getName() }.join(' '),
            'Main-Class': 'eu.miaplatform.service.ServiceApplicationKt'
        )
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    archiveFileName = 'application.jar'
}
